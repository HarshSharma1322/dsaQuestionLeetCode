class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==NULL) return NULL;
        for(auto curr=head; curr!=NULL; curr=curr->next->next){
            Node *newNode= new Node(curr->val);
            newNode->next=curr->next;
            curr->next=newNode;
        }
        
        for(auto curr=head; curr!=NULL; curr=curr->next->next){
            curr->next->random=curr->random ? curr->random->next: NULL;
        }
        
        Node *original=head, *copy=head->next;
        Node *temp=copy;
        
        while(original && copy){
            original->next= original->next? original->next->next:original->next;
            copy->next=copy->next?copy->next->next: copy->next;
            copy=copy->next;
            original=original->next;
        }
        return temp;
    }
};
