class Solution {
public:
    bool isValid(int row, int col, char k, vector<vector<char>>&A ){
        for(int i=0; i<9; i++){
            if(A[i][col]==k) return false;
            if(A[row][i]==k) return false;
            if(A[(row/3)*3 + i/3][(col/3)*3 + i%3]==k)return false;
        }
        return true;
    }
    bool solve(vector<vector<char>>&A){
        for(int i=0; i<A.size(); i++){
            for(int j=0; j<A[0].size(); j++){
                if(A[i][j]=='.'){
                    for(char k='1'; k<='9'; k++){
                        if(isValid(i,j,k,A)){
                            A[i][j]=k;
                            if(solve(A)==true) return true;
                            else{
                               A[i][j]='.'; 
                            }
                        }
                    }
                    return false;
                }
            }
        }
        return true;
    }
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
};
