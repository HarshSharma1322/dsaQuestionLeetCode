class Solution {
public:
    bool isPalindrome(string s, int start, int end){
        while(start<=end){
            if(s[start++]!=s[end--]){
                return false;
            }
        }
        return true;
    }
    void func(string s, int indx, vector<vector<string>>&ans, vector<string>ds){
        if(indx==s.size()){
            ans.push_back(ds);
            return;
        }
        for(int i=indx; i<s.size(); i++){
            if(isPalindrome(s,indx,i)){
                ds.push_back(s.substr(indx, i-indx+1));
                func(s,i+1,ans,ds);
                ds.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>>ans;
        vector<string>ds;
        int indx=0;
        func(s,indx,ans,ds);
        return ans;
    }
};
