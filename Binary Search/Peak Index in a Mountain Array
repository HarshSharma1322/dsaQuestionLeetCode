soln 1:
class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
        int start=0;
        int end=arr.size()-1;

        while(start<=end){
            int mid=((start+end)/2);
            if(arr[mid]>arr[mid+1]&& arr[mid]>arr[mid-1]){
                return mid;
            }
            else if(arr[mid]>arr[mid+1]&& mid<end){
                end=mid-1;
            }
            else if(arr[mid]<arr[mid+1] && mid<end){
                start=mid+1;
            }
            else if(mid==end){
                return mid;
            }
        }
        return -1;

    }
};




soln 2: More optimised

class Solution {
public:
    int peakIndexInMountainArray(vector<int>& arr) {
        int start= 0;
        int end=arr.size()-1;
        int mid= ((start+end)/2);
        while(start<end){
            if(arr[mid]<arr[mid+1]){
                start=mid+1;
            }
            else{
                end=mid;
            }
            mid= ((start+end)/2);
        }
        return start;
        
    }
};

