    TreeNode *buildTree(vector<int>&inorder,int iS,int iE, vector<int>&postorder,int pS,int pE,map<int,int>&mp){
        if(iS>iE || pS>pE) return NULL;
        
        TreeNode *root= new TreeNode(postorder[pE]);
        int inVal= mp[postorder[pE]];
        int nums=inVal-iS;
        
        root->left=buildTree(inorder,iS,inVal-1,postorder,pS,pS+nums-1,mp);
        root->right=buildTree(inorder,inVal+1,iE,postorder,pS+nums,pE-1,mp);
        return root;
    }
    
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        map<int,int>mp;
        for(int i=0; i<inorder.size(); i++){
            mp[inorder[i]]=i;
        }    
        TreeNode *root= buildTree(inorder,0,inorder.size()-1,postorder,0,postorder.size()-1,mp);
        return root;
    }
};
