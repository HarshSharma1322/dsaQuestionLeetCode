class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool checkcycle(int node, vector<int>&vis,vector<int>&dfsvis,vector<int> adj[]){
        vis[node]=1;
        dfsvis[node]=1;
        for(auto it:adj[node]){
            
            if(!vis[it]){
                if(checkcycle(it,vis,dfsvis,adj)){
                    return true;
                }
            }
            else if(vis[it]==1 && dfsvis[it]==1) return true;
            
        }
        dfsvis[node]=0;
        return false;
    }
    bool isCyclic(int V, vector<int> adj[]) {
        vector<int>vis(V+1,0);
        vector<int>dfsvis(V+1,0);
        
        for(int i=0; i<V; i++){
            if(!vis[i]){
                if(checkcycle(i,vis,dfsvis,adj)){
                    return true;
                }
            }
        }
        return false;
    }
};
